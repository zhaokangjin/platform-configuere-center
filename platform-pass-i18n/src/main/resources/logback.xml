<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
	<!-- 配置日志信息输出目的地
		org.apache.log4j.ConsoleAppender（控制台）
		org.apache.log4j.FileAppender（文件）
		org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
		org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
		org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方） 
	-->
	<!-- 配置日志信息的格式
		org.apache.log4j.HTMLLayout（以HTML表格形式布局）
		org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
		org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
		org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
	-->
	<!-- ConsoleAppender选项
		org.apache.log4j.HTMLLayout（以HTML表格形式布局）
		org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
		org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
		org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
	-->
	<!-- RollingFileAppender 选项
		Threshold=DEBUG:指定日志消息的输出最低层次。 
		ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。 
		File=mylog.txt:指定消息输出到mylog.txt文件。 
		Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。 
		MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。 
		MaxBackupIndex=2:指定可以产生的滚动文件的最大数。
	-->
	<!-- 日志信息格式中几个符号所代表的含义
		-X号: X信息输出时左对齐； 
		%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL, 
		%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 
		%r: 输出自应用启动到输出该log信息耗费的毫秒数 
		%c: 输出日志信息所属的类目，通常就是所在类的全名 
		%t: 输出产生该日志事件的线程名 
		%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10) 
		%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。 
		%%: 输出一个”%”字符 
		%F: 输出日志消息产生时所在的文件名称 
		%L: 输出代码中的行号 
		%m: 输出代码中指定的消息,产生的日志具体信息 
		%n: 输出一个回车换行符，Windows平台为”\r\n”，Unix平台为”\n”输出日志信息换行
	-->
	<!-- 应用名称 -->
	<property name="APP_NAME" value="logtest" />
	<!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
	<property name="LOG_HOME" value="${log.dir:-logs}/${APP_NAME}" />
	<!-- 日志输出格式 -->
	<property name="ENCODER_PATTERN"
		value="%d{yyyy-MM-dd  HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n" />
	<contextName>${APP_NAME}</contextName>

	<!-- 控制台日志：输出全部日志到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>${ENCODER_PATTERN}</Pattern>
		</encoder>
	</appender>

	<!-- 文件日志：输出全部日志到文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/all-log/output.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- 错误日志：用于将错误日志输出到独立文件 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error-log/error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>WARN</level>
		</filter>
	</appender>

	<!-- 独立输出的同步日志 -->
	<appender name="SYNC_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/sync-log/sync.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
	</appender>

	<logger name="log.sync" level="DEBUG" addtivity="true">
		<appender-ref ref="SYNC_FILE" />
	</logger>

	<root>
		<level value="DEBUG" />
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
		<appender-ref ref="ERROR_FILE" />
	</root>
</configuration>